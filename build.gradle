buildscript {
    repositories {
        jcenter()
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7"
}

apply from: "./libraries.gradle"

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'

sourceCompatibility = 1.8
targetCompatibility = 1.8
sourceSets {
    main {
        java {
            srcDir 'src/main/java' // 指定源码目录
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
    test {
        java {
            srcDir 'src/test/java' // 指定源码目录
        }
        resources {
            srcDir 'src/test/resources' //资源目录
        }
    }
}

allprojects {
    repositories { jcenter() }
    tasks.withType(Javadoc) {
        options { encoding "UTF-8" charSet 'UTF-8' links "http://docs.oracle.com/javase/7/docs/api" }
    }
}


publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            groupId 'com.tevid'
            artifactId 'jbox'
            version version
        }
    }
}

bintray {
    user = ''
    key = ''
    filesSpec {
        from 'build/libs'
        into '.'
    }
    dryRun = false
    publish = true
    override = true
    publications = ['MyPublication']
    pkg {
        repo = 'jbox'
        name = 'jbox'
        userOrg = ''
        licenses = ['Apache-2.0']
        vcsUrl = 'https://github.com/tevid/jbox.git'
        websiteUrl = 'https://github.com/tevid/jbox'
        issueTrackerUrl = 'https://github.com/tevid/jbox/issues'
        labels = ['java', 'micro-service']
        publicDownloadNumbers = true
        version {
            name = version
            desc = 'Java set up common methods of micro service '
        }
    }
}


idea {
    project {
        languageLevel = '1.8'
    }
}

dependencies {
    compile(libraries.springCore)
    compile(libraries.springTest)
    compile(libraries.springBeans)
    compile(libraries.springContext)
    compile(libraries.fastjson)
    compile(libraries.commonsLang)
    compile(libraries.hamcrestAll)
    compile(libraries.guava)
    compile(libraries.httpclient)
    compile(libraries.jacksonDataBind)

    compile(libraries.jedis)
    compile(libraries.slf4j)
    compile(libraries.bintray)

    testCompile(libraries.springTest)
    testCompile(libraries.junit)
}
